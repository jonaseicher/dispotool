<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui">
    <h:head>
        <title>Bewegungen</title>

        <!--Load the AJAX API-->
        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
        <script type="text/javascript">

            google.charts.load('current', {'packages': ['corechart', 'line']});
            // Set a callback to run when the Google Visualization API is loaded.
            google.charts.setOnLoadCallback(drawChart);

            function drawChart() {

                drawBewegungsChart(#{bewegungView.chartArray});

                drawSimChart(#{bewegungView.simBestandsArray});

            }
            var bewegungsChartOptions = {
                'title': 'Reale Bewegungsdaten von Materialnummer: #{bewegungView.materialNummer}',
                'height': 400,
                vAxis: {
                    title: 'Bewegungsmenge',
                    minValue: 0
                },
                hAxis: {
                    title: 'Datum',
                    format: 'd.MMM yyyy'
                },
                seriesType: 'bars',
                isStacked: true,
                series: {
                    0: {
                        type: 'line',
                        lineWidth: 0.5,
                        color: 'blue'
                    }
                },
                explorer: {
                    maxZoomOut: 1,
                    maxZoomIn: 8,
                    keepInBounds: true
                }
            };

            var simChartOptions = {'title': 'Bestandsverlauf mit simulierten Bestellungen f√ºr Materialnummer: #{bewegungView.materialNummer}',
                'height': 400,
                hAxis: {
                    title: 'Datum',
                    format: 'd.MMM yyyy'
                },
                vAxis: {
                    title: 'Bestand',
                    minValue: 0
                },
                seriesType: 'bars',
                isStacked: true,
                series: {
                    0: {
                        type: 'line',
                        lineWidth: 0.5,
                        color: 'blue'
                    }
                },
                explorer: {
                    maxZoomOut: 1,
                    maxZoomIn: 8,
                    keepInBounds: true
                }
            };
            var simChart;
            var simChartData;

            function drawBewegungsChart(data) {
                var chartData = new google.visualization.DataTable(data);
                var chart = new google.visualization.ComboChart(document.getElementById('chart_div_real'));
                chart.draw(chartData, bewegungsChartOptions);

            }

//            function drawBestandsChart(data) {
//
//                var chartData = new google.visualization.DataTable(data);
//                var chart = new google.visualization.AreaChart(document.getElementById('chart_div2'));
//                chart.draw(chartData, bestandsChartOptions);
//            }

            function drawSimChart(data) {

                var chartData = new google.visualization.DataTable(data);
                simChart = new google.visualization.ComboChart(document.getElementById('chart_div_sim'));
                simChart.draw(chartData, simChartOptions);
            }

            function redrawSimChart(data) {
                simChartData = new google.visualization.DataTable(data);
                simChart.draw(simChartData, simChartOptions);
            }

        </script>
    </h:head>
    <h:body>


        <h:form id="form">
            <p:growl id="msgs" showDetail="true"/>

            <div id="chart_div_sim"></div>
            <h:panelGrid columns="2" cellpadding="5" styleClass="ui-grid">

                <h:outputText value="Bestelldauer in Tagen:"/>
                <p:spinner value="#{bewegungView.abgangsInterval}">
                    <p:ajax update="maxAbgang" process="@this" />
                </p:spinner>

                <h:outputText value="Max Abgangsmenge:"/>
                <h:outputText id="maxAbgang" value="#{bewegungView.getMaxAbgangsmenge()}"/>


                <h:outputText value="Bestellmenge:"/>
                <p:spinner value="#{bewegungView.bestellmenge}">
                    <p:ajax process="@this" />
                </p:spinner>

                <h:outputText value="Kosten pro Bestellung: "/>
                <p:spinner value="#{bewegungView.kostenProBestellung}">
                    <p:ajax process="@this" />
                </p:spinner>

                <h:outputText value="Bestandszins:"/>
                <p:spinner value="#{bewegungView.bestandsZins}">
                    <p:ajax process="@this" />
                </p:spinner>

                <h:outputText value="Durchschnittsbestand:"/>
                <h:outputText value="0"/>

                <h:outputText value="Anzahl Bestellungen:"/>
                <h:outputText value="0"/>

                <h:outputText value="Tage mit Fehlbestand:"/>
                <h:outputText value="0"/>

                <h:outputText value="Minimaler Bestand:"/>
                <h:outputText value="0"/>


                <h:form id="redrawButtonForm">
                    <h:commandButton value="Redraw Chart"
                                     onclick="redrawSimChart(#{bewegungView.getSimBestandsArray()})"/>
                </h:form>
            </h:panelGrid>

            <div id="chart_div_real"></div>


        </h:form>
    </h:body>
</html>
